from _typeshed import Incomplete

from stone.backend import Backend
from stone.ir.api import ApiNamespace

def fmt_error_type(data_type, inside_namespace: Incomplete | None = None, wrap_error_in: str = ""): ...
def fmt_type_name(data_type, inside_namespace: Incomplete | None = None): ...
def fmt_polymorphic_type_reference(data_type, inside_namespace: Incomplete | None = None): ...
def fmt_type(data_type, inside_namespace: Incomplete | None = None): ...
def fmt_union(type_strings): ...
def fmt_func(name, version): ...
def fmt_var(name): ...
def fmt_tag(cur_namespace, tag, val): ...
def check_route_name_conflict(namespace) -> None: ...
def generate_imports_for_referenced_namespaces(backend: Backend, namespace: ApiNamespace, module_name_prefix: str) -> None: ...
def get_data_types_for_namespace(namespace): ...
