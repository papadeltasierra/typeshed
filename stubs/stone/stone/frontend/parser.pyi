from _typeshed import Incomplete

logger: Incomplete

class ParserFactory:
    tokens: Incomplete
    start: Incomplete
    debug: Incomplete
    yacc: Incomplete
    lexer: Incomplete
    errors: Incomplete
    path: Incomplete
    anony_defs: Incomplete
    exhausted: bool
    def __init__(self, debug: bool = False) -> None: ...
    def get_parser(self): ...
    def parse(self, data, path: Incomplete | None = None): ...
    def test_lexing(self, data) -> None: ...
    def got_errors_parsing(self): ...
    def get_errors(self): ...
    def p_spec_init(self, p) -> None: ...
    def p_spec_init_decl(self, p) -> None: ...
    def p_spec_iter(self, p) -> None: ...
    def p_spec_ignore_newline(self, p) -> None: ...
    def p_definition(self, p) -> None: ...
    def p_namespace(self, p) -> None: ...
    def p_import(self, p) -> None: ...
    def p_alias(self, p) -> None: ...
    def p_nl(self, p) -> None: ...
    def p_nl_combine(self, p) -> None: ...
    def p_primitive(self, p) -> None: ...
    def p_pos_arg(self, p) -> None: ...
    def p_pos_args_list_create(self, p) -> None: ...
    def p_pos_args_list_extend(self, p) -> None: ...
    def p_kw_arg(self, p) -> None: ...
    def p_kw_args(self, p) -> None: ...
    def p_kw_args_update(self, p) -> None: ...
    def p_args(self, p) -> None: ...
    def p_field_nullable(self, p) -> None: ...
    def p_type_ref(self, p) -> None: ...
    def p_foreign_type_ref(self, p) -> None: ...
    def p_annotation_type(self, p) -> None: ...
    def p_enumerated_subtypes(self, p) -> None: ...
    def p_struct(self, p) -> None: ...
    def p_anony_struct(self, p) -> None: ...
    def make_struct(self, p) -> None: ...
    def p_struct_patch(self, p) -> None: ...
    def p_inheritance(self, p) -> None: ...
    def p_enumerated_subtypes_list_create(self, p) -> None: ...
    def p_enumerated_subtypes_list_extend(self, p) -> None: ...
    def p_enumerated_subtype_field(self, p) -> None: ...
    def p_field_list_create(self, p) -> None: ...
    def p_field_list_extend(self, p) -> None: ...
    def p_default_option(self, p) -> None: ...
    def p_field(self, p) -> None: ...
    def p_anony_def_option(self, p) -> None: ...
    def p_tag_ref(self, p) -> None: ...
    def p_annotation(self, p) -> None: ...
    def p_annotation_ref_list_create(self, p) -> None: ...
    def p_annotation_ref_list_extend(self, p) -> None: ...
    def p_annotation_ref(self, p) -> None: ...
    def p_union(self, p) -> None: ...
    def p_anony_union(self, p) -> None: ...
    def make_union(self, p) -> None: ...
    def p_union_patch(self, p) -> None: ...
    def p_uniont(self, p) -> None: ...
    def p_field_void(self, p) -> None: ...
    def p_route(self, p) -> None: ...
    def p_route_name(self, p) -> None: ...
    def p_route_path_suffix(self, p) -> None: ...
    def p_route_version(self, p) -> None: ...
    def p_route_io(self, p) -> None: ...
    def p_route_deprecation(self, p) -> None: ...
    def p_attrs_section(self, p) -> None: ...
    def p_attr_fields_create(self, p) -> None: ...
    def p_attr_fields_add(self, p) -> None: ...
    def p_attr_field(self, p) -> None: ...
    def p_docsection(self, p) -> None: ...
    def p_docstring_string(self, p) -> None: ...
    def p_examples_create(self, p) -> None: ...
    def p_examples_add(self, p) -> None: ...
    def p_example(self, p) -> None: ...
    def p_example_fields_create(self, p) -> None: ...
    def p_example_fields_add(self, p) -> None: ...
    def p_example_field(self, p) -> None: ...
    def p_example_multiline(self, p) -> None: ...
    def p_example_field_ref(self, p) -> None: ...
    def p_ex_list(self, p) -> None: ...
    def p_ex_list_item_primitive(self, p) -> None: ...
    def p_ex_list_item_id(self, p) -> None: ...
    def p_ex_list_item_list(self, p) -> None: ...
    def p_ex_list_items_create(self, p) -> None: ...
    def p_ex_list_items_extend(self, p) -> None: ...
    def p_ex_map(self, p) -> None: ...
    def p_ex_map_multiline(self, p) -> None: ...
    def p_ex_map_elem_primitive(self, p) -> None: ...
    def p_ex_map_elem_composit(self, p) -> None: ...
    def p_ex_map_elem_id(self, p) -> None: ...
    def p_ex_map_pair(self, p) -> None: ...
    def p_ex_map_pairs_create(self, p) -> None: ...
    def p_ex_map_pairs_extend(self, p) -> None: ...
    def p_ex_map_pairs_multiline(self, p) -> None: ...
    def p_empty(self, p) -> None: ...
    def p_error(self, token) -> None: ...
